/******************************************************************************/
/*                                                                            */
/*             _____                         _ _                              */
/*            |  __ \                       (_(_)                             */
/*            | |  \ \ _   _ _ __ ___   ___  _ _ _ __   ___                   */
/*            | |   | | | | | `_ ` _ \/  _ \| | | '_ \ / _ \                  */
/*            | |___| | |_| | | | | | | (_| | | | | | |  __/                  */
/*            ________/\___/|_| |_| |_|  __/|_|_|_| |_|\___| v1.0             */
/*                                    | |                                     */
/*                                    |_|                                     */
/*                                                                            */
/*                              RPX/RPL Dump Tool                             */
/*                                                                            */
/******************************************************************************/

- 1......Introduction

- 2......Requirements 

- 3......How to Use 

- 4......Notes

/******************************************************************************/
/* 1. Introduction :                                                          */
/******************************************************************************/

- This tool dumps .rpx and .rpl files loaded by any application/game.
- It does not dump content files! Use TCPGecko to do that.

- How it works :
    Once dumpiine is installed, every time you launch an application/game, it will copy .rpx and .rpl files in memory.
    You can then copy those files to the SD Card by launching the dumpiine menu (Mii Maker).


/******************************************************************************/
/* 2. Requirements                                                            */
/******************************************************************************/

- Wii U FW 5.3.2
- SD(HC) Card


/******************************************************************************/
/* 3. How to Use                                                              */
/******************************************************************************/

- 1. In the Internet Browser, Launch the included kernel exploit (www/kexploit, same as loadiine).
(You need a modified kernel exploit that sets 0xA0000000 virtual memory range to 0x10000000 physical memory address)

- 2. Relaunch the Internet Browser.

- 3. Launch dumpiine (www/dumpiine), it should return to the Pause Menu. Exit to Home Menu.

- 4. Launch the application/game you want to dump.
    - Note: Be aware that dumpiine will only dump .rpl files loaded by the game.
      Not all .rpl files are loaded at game startup.
      It is recommended to browse the game (start a level for example).
      For the moment dumpiine can't tell if all .rpl have been dumped.

- 5. Quit the game.

- 6. Insert your SD Card into the Wii U, if it's not already done. 
    - Note: Files will be copied at the root of the SD Card.

- 7. Launch Mii Maker. The dumpiine menu should open. Now, press A to copy files on the SD Card.
    - Note: DO NOT PRESS A IF TOTAL SIZE IS BIGGER THAN 21 MB !!!
            (actually you can, it will start dumping the first 21 MB of data ... and probably crash ... or copy corrupted data)
    - Note2: It can take up to 30s to dump 20MB depending of your SD Card speed.

- 8. Quit Dumpiine menu by pressing Home button.

- 9. Quit Mii Maker. You can now retrieve the files from the SD Card on your computer.

Note : You can repeat operations from step 4 to dump another app/game.


/******************************************************************************/
/* 4. Notes :                                                                 */
/******************************************************************************/

- You can't use Dumpiine and Loadiine at the same time.

- As for loadiine, tools like pygecko or cafiine won't work with the provided kernel exploit.

- Some game can't be dump, as Splatoon.
    - same problem as pyGecko/cafiine, the 0xA0000000 virtual memory range must be reset to default value, which is not possible for the moment with dumpiine.

- RPL files listed below (part of CafeOS) are exclude from dump :

avm, camera, dc, dmae, drmapp, erreula, gx2, h264, lzma920, mic, nfc, nio_prof, nlibcurl, nlibnss
nlibnss2, nn_ac, nn_acp, nn_act, nn_aoc, nn_boss, nn_ccr, nn_cmpt, nn_ec, nn_fp, nn_hai, nn_hpad
nn_idbe, nn_ndm, nn_nets2, nn_nfp, nn_nim, nn_olv, nn_pdm, nn_save, nn_sl, nn_spm, nn_temp, nn_uds
nn_vctl, nsysccr, nsyshid, nsyskbd, nsysnet, nsysuhs, nsysuvd, ntag, padscore, proc_ui, snd_core
snd_user, sndcore2, snduser2, swkbd, sysapp, tcl, tve, uac, uac_rpl, usb_mic, uvc, uvd, vpad, vpadbase, zlib125
